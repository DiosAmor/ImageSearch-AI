services:
  db:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: imagesearch-db
    restart: always
    env_file:
      - django/.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command:
      ["postgres", "-c", "shared_buffers=256MB", "-c", "max_connections=200"]
  redis:
    image: redis:7-alpine
    container_name: imagesearch-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  web:
    build:
      context: ./django
      dockerfile: ../Dockerfile
    container_name: imagesearch-web
    restart: always
    env_file:
      - django/.env
    ports:
      - "8000:8000"
    volumes:
      - ./django:/app
      - media_data:/app/media
    depends_on:
      - db
      - redis
    command: python manage.py runserver 0.0.0.0:8000
  celery:
    build:
      context: ./django
      dockerfile: ../Dockerfile
    container_name: imagesearch-celery
    restart: always
    env_file:
      - django/.env
    volumes:
      - ./django:/app
      - media_data:/app/media
    depends_on:
      - db
      - redis
    command: celery -A imagesearch worker --loglevel=info
  celery-beat:
    build:
      context: ./django
      dockerfile: ../Dockerfile
    container_name: imagesearch-celery-beat
    restart: always
    env_file:
      - django/.env
    volumes:
      - ./django:/app
      - media_data:/app/media
    depends_on:
      - db
      - redis
    command: celery -A imagesearch beat --loglevel=info
volumes:
  db_data:
  redis_data:
  media_data:
